{"version":3,"sources":["component/images/light-off.png","component/images/light-on.png","component/test.js","reportWebVitals.js","index.js"],"names":["imgList","lightOff","lightOn","index","LightBulb","useState","photo","updatePhoto","useEffect","console","log","length","setInterval","src","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gMAAe,MAA0B,sCCA1B,MAA0B,qC,OCGnCA,EAAU,CAACC,EAAUC,GACvBC,EAAQ,EAgCGC,MA9Bf,WACI,MAA4BC,mBAASL,EAAQC,UAA7C,mBAAMK,EAAN,KAAaC,EAAb,KAmBA,OAjBAC,qBACI,WAaA,OAZIC,QAAQC,IAAI,SACRP,EAAQ,IAAMH,EAAQW,OACtBR,EAAQ,EAGRA,GAAgB,EAGxBS,aAAY,WACRL,EAAYD,KACb,KAEI,kBAAMG,QAAQC,IAAI,WAC1B,CAACJ,IAGA,mCACA,gCACA,qBAAKO,IAAOb,EAAQG,KACpB,wBAAQW,QAAU,kBAAMP,EAAYP,EAAQG,KAA5C,iCClBOY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.76a6796a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/light-off.e0edf900.png\";","export default __webpack_public_path__ + \"static/media/light-on.5beb6bef.png\";","import React, { useState, useEffect } from 'react';\r\nimport lightOff from './images/light-off.png';\r\nimport lightOn from './images/light-on.png';\r\nconst imgList = [lightOff, lightOn];\r\nlet index = 0;\r\n\r\nfunction LightBulb() {\r\n    const[photo, updatePhoto] = useState(imgList.lightOff);\r\n\r\n    useEffect(\r\n        () => {\r\n            console.log('entry')\r\n            if (index + 1 === imgList.length) {\r\n                index = 0;\r\n            }\r\n            else {\r\n                index = index + 1;\r\n            }\r\n\r\n        setInterval(() => {\r\n            updatePhoto(photo)\r\n        }, 1000);\r\n\r\n        return () => console.log('exit')\r\n    }, [photo]);\r\n\r\n    return (\r\n        <>          \r\n        <div>\r\n        <img src = {imgList[index]} />\r\n        <button onClick={ () => updatePhoto(imgList[index])}>Blink! Blink!</button>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default LightBulb;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport LightBulb from './component/test';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <LightBulb />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}